/* tslint:disable */
/* eslint-disable */
/**
 * MiKloud - Customer Web API
 * This api is for the padelfy backend.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: dmartindiaz3@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationInDTOUsersInner } from './NotificationInDTOUsersInner';
import {
    NotificationInDTOUsersInnerFromJSON,
    NotificationInDTOUsersInnerFromJSONTyped,
    NotificationInDTOUsersInnerToJSON,
} from './NotificationInDTOUsersInner';

/**
 * 
 * @export
 * @interface NotificationInDTO
 */
export interface NotificationInDTO {
    /**
     * 
     * @type {string}
     * @memberof NotificationInDTO
     */
    spaceId: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationInDTO
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationInDTO
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationInDTO
     */
    type: NotificationInDTOTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof NotificationInDTO
     */
    triggerDate?: string;
    /**
     * 
     * @type {Array<NotificationInDTOUsersInner>}
     * @memberof NotificationInDTO
     */
    users: Array<NotificationInDTOUsersInner>;
}


/**
 * @export
 */
export const NotificationInDTOTypeEnum = {
    Sms: 'sms',
    Email: 'email',
    App: 'app'
} as const;
export type NotificationInDTOTypeEnum = typeof NotificationInDTOTypeEnum[keyof typeof NotificationInDTOTypeEnum];


/**
 * Check if a given object implements the NotificationInDTO interface.
 */
export function instanceOfNotificationInDTO(value: object): value is NotificationInDTO {
    if (!('spaceId' in value) || value['spaceId'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('users' in value) || value['users'] === undefined) return false;
    return true;
}

export function NotificationInDTOFromJSON(json: any): NotificationInDTO {
    return NotificationInDTOFromJSONTyped(json, false);
}

export function NotificationInDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationInDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'spaceId': json['spaceId'],
        'title': json['title'],
        'description': json['description'],
        'type': json['type'],
        'triggerDate': json['triggerDate'] == null ? undefined : json['triggerDate'],
        'users': ((json['users'] as Array<any>).map(NotificationInDTOUsersInnerFromJSON)),
    };
}

export function NotificationInDTOToJSON(value?: NotificationInDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'spaceId': value['spaceId'],
        'title': value['title'],
        'description': value['description'],
        'type': value['type'],
        'triggerDate': value['triggerDate'],
        'users': ((value['users'] as Array<any>).map(NotificationInDTOUsersInnerToJSON)),
    };
}

